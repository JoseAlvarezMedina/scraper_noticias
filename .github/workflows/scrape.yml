# .github/workflows/scrape.yml
name: Scrapy every 6h

permissions:
  contents: write

on:
  schedule:
    - cron: '0 */6 * * *'   # cada 6 horas (UTC)
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      # 1) Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      # 2) Configurar Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3) Instalar dependencias (con wheel de tokenizers)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Forzamos tokenizers==0.10.3 (tiene wheel para CPython 3.11) 
          pip install tokenizers==0.10.3 --only-binary tokenizers
          # Ahora el resto de tus reqs; pip no volver√° a compilar tokenizers
          pip install -r requirements.txt

      # 4) Ejecutar Scrapy
      - name: Run scraper
        run: scrapy crawl titulares

      # 5) Commit & Push de los datos generados
      - name: Commit and push results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          # git config user.email "actions@github.com"  # eliminado a petici√≥n tuya
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git add noticias.csv noticias.db
          git commit -m "ü§ñ Actualizaci√≥n autom√°tica de scraping $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "No hay cambios que commitear"
          git push origin HEAD:main
